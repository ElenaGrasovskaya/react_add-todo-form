{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/users.ts","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","cn","completed","title","TodoList","todos","map","users","username","todosWithUser","userId","find","getMaxId","Math","max","App","useState","newTitle","setNewTitle","selectedUser","setSelectedUser","setTodos","afterSubmit","setAfterSubmit","action","method","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","required","disabled","ReactDOM","render","document","getElementById"],"mappings":"4OAMaA,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,mBAAGC,UAAU,WAAWC,KAAM,wBAAUF,QAAV,IAAUA,OAAV,EAAUA,EAAMG,SAAW,EAAzD,UACO,OAAJH,QAAI,IAAJA,OAAA,EAAAA,EAAMI,OAAQ,MCDRC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,0BACE,UAASA,EAAKC,GACdN,UAAWO,IAAG,WAAY,CACxB,sBAAuBF,EAAKG,YAHhC,UAME,oBAAIR,UAAU,kBAAd,SAAiCK,EAAKI,QACrCJ,EAAKN,MAAQ,cAAC,EAAD,CAAUA,KAAMM,EAAKN,WCT5BW,EAA2B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzC,OACE,yBAASX,UAAU,WAAnB,SACGW,EAAMC,KAAI,SAACP,GAAD,OACT,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKC,UCJlCO,EAAY,YCRH,CACb,CACEP,GAAI,EACJH,KAAM,gBACNW,SAAU,OACVZ,MAAO,qBAET,CACEI,GAAI,EACJH,KAAM,eACNW,SAAU,YACVZ,MAAO,qBAET,CACEI,GAAI,EACJH,KAAM,mBACNW,SAAU,WACVZ,MAAO,sBAET,CACEI,GAAI,EACJH,KAAM,mBACNW,SAAU,WACVZ,MAAO,6BAET,CACEI,GAAI,EACJH,KAAM,mBACNW,SAAU,SACVZ,MAAO,4BAET,CACEI,GAAI,EACJH,KAAM,uBACNW,SAAU,mBACVZ,MAAO,2BAET,CACEI,GAAI,EACJH,KAAM,kBACNW,SAAU,eACVZ,MAAO,0BAET,CACEI,GAAI,EACJH,KAAM,2BACNW,SAAU,gBACVZ,MAAO,wBAET,CACEI,GAAI,EACJH,KAAM,kBACNW,SAAU,WACVZ,MAAO,2BAET,CACEI,GAAI,GACJH,KAAM,qBACNW,SAAU,iBACVZ,MAAO,4BDlDLa,EAAuB,YETd,CACb,CACET,GAAI,EACJG,MAAO,qBACPD,WAAW,EACXQ,OAAQ,GAEV,CACEV,GAAI,GACJG,MAAO,kBACPD,WAAW,EACXQ,OAAQ,GAEV,CACEV,GAAI,EACJG,MAAO,qCACPD,WAAW,EACXQ,OAAQ,KFRsCJ,KAAI,SAACP,GAAD,mBAAC,eAClDA,GADiD,IAEpDN,KAAMc,EAAMI,MAAK,SAAClB,GAAD,OAAUA,EAAKO,KAAOD,EAAKW,eAExCE,EAAW,SAACP,GAAD,OAAmBQ,KAAKC,IAAL,MAAAD,KAAI,YAAQR,EAAMC,KAAI,SAACP,GAAD,OAAUA,EAAKC,SAE5De,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA0BJ,mBAASP,GAAnC,mBAAOJ,EAAP,KAAcgB,EAAd,KACA,EAAsCL,oBAAS,GAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KAwBA,OACE,sBAAK7B,UAAU,MAAf,UACE,+CAEA,uBAAM8B,OAAO,aAAaC,OAAO,OAAOC,SA1BvB,SAACC,GACpBA,EAAMC,iBACNL,GAAe,GACVJ,GAAiBF,IAItBI,EAAS,GAAD,mBACHhB,GADG,CAEN,CACEL,GAAIY,EAASP,GAAS,EACtBF,MAAOc,EACPf,WAAW,EACXQ,OAAQS,EACR1B,KAAMc,EAAMI,MAAK,SAAClB,GAAD,OAAUA,EAAKO,KAAOmB,SAG3CC,EAAgB,GAChBF,EAAY,IACZK,GAAe,KAOb,UACE,sBAAK7B,UAAU,QAAf,UACE,uBACEmC,KAAK,OACL,UAAQ,aACRC,YAAY,GACZC,MAAOd,EACPe,SAAU,SAACL,GAAD,OAAWT,EAAYS,EAAMM,OAAOF,UAE/CT,IAAgBL,GACf,sBAAMvB,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,yBACE,UAAQ,aACRqC,MAAOZ,EACPa,SAAU,SAACL,GAAD,OAAWP,GAAiBO,EAAMM,OAAOF,QACnDG,UAAQ,EAJV,UAME,wBAAQH,MAAO,EAAGI,UAAQ,EAA1B,2BAGC5B,EAAMD,KAAI,SAACb,GAAD,OACT,wBAAQsC,MAAOtC,EAAKO,GAApB,SACGP,EAAKI,MADqBJ,EAAKO,UAMrCsB,IAAgBH,GACf,sBAAMzB,UAAU,QAAhB,qCAIJ,wBAAQmC,KAAK,SAAS,UAAQ,eAA9B,oBAIF,cAAC,EAAD,CAAUxB,MAAOA,QGpFvB+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2f5399d5.chunk.js","sourcesContent":["import User from '../../types/User';\n\ninterface Props {\n  user: User | undefined;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}` || ''}>\n      {user?.name || ''}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport Todo from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import Todo from '../../types/Todo';\n\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport Todo from './types/Todo';\nimport User from './types/User';\n\nconst users:User[] = [...usersFromServer];\nconst todosWithUser:Todo[] = [...todosFromServer].map((todo) => ({\n  ...todo,\n  user: users.find((user) => user.id === todo.userId),\n}));\nconst getMaxId = (todos: Todo[]) => Math.max(...todos.map((todo) => todo.id));\n\nexport const App = () => {\n  const [newTitle, setNewTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [todos, setTodos] = useState(todosWithUser);\n  const [afterSubmit, setAfterSubmit] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setAfterSubmit(true);\n    if (!selectedUser || !newTitle) {\n      return;\n    }\n\n    setTodos([\n      ...todos,\n      {\n        id: getMaxId(todos) + 1,\n        title: newTitle,\n        completed: false,\n        userId: selectedUser,\n        user: users.find((user) => user.id === selectedUser),\n      },\n    ]);\n    setSelectedUser(0);\n    setNewTitle('');\n    setAfterSubmit(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"\"\n            value={newTitle}\n            onChange={(event) => setNewTitle(event.target.value)}\n          />\n          {afterSubmit && !newTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={(event) => setSelectedUser(+event.target.value)}\n            required\n          >\n            <option value={0} disabled>\n              Choose a user\n            </option>\n            {users.map((user) => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {afterSubmit && !selectedUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}